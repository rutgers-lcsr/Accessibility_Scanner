name: Deploy A11y

on:
    push:
        branches:
            - main

jobs:
    deploy:
        environment: production
        runs-on: production-a11y
        env:
            NFS_SERVER_IP: ${{ vars.NFS_SERVER_IP }}
            NFS_SHARE_PATH: ${{ vars.NFS_SHARE_PATH }}
            HOSTNAME: ${{ vars.CLIENT_URL }}
            NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
            NEXT_PUBLIC_CAS_URL: ${{ vars.NEXT_PUBLIC_CAS_URL }}
            NEXT_CAS_CLIENT_SAML_TOLERANCE: ${{ vars.NEXT_CAS_CLIENT_SAML_TOLERANCE }}
            NEXT_CAS_CLIENT_SECRET: ${{ secrets.NEXT_CAS_CLIENT_SECRET }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set up Certs
              run: |
                  HOSTNAME=$(hostname)
                  cp -rflT /etc/letsencrypt/live/$HOSTNAME/ certs/

            - name: Setup environment
              run: |
                  cat <<EOF > .env
                  DEBUG=${{vars.DEBUG}}
                  FLASK_ENV=${{vars.FLASK_ENV}}
                  TESTING=${{vars.TESTING}}
                  JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}
                  CLIENT_URL=${{vars.CLIENT_URL}}
                  MAIL_SERVER=${{vars.MAIL_SERVER}}
                  MAIL_PORT=${{vars.MAIL_PORT}}
                  MAIL_DEFAULT_SENDER=${{vars.MAIL_DEFAULT_SENDER}}
                  SITE_ADMINS=${{vars.SITE_ADMINS}}
                  ADMIN_EMAIL=${{vars.ADMIN_EMAIL}}
                  ADMIN_PASSWORD=${{secrets.ADMIN_PASSWORD}}
                  DB_ROOT_PASSWORD=${{secrets.DB_ROOT_PASSWORD}}
                  DB_PASSWORD=${{secrets.DB_PASSWORD}}
                  NFS_SERVER_IP=${{ vars.NFS_SERVER_IP }}
                  NFS_SHARE_PATH=${{ vars.NFS_SHARE_PATH }}
                  NEXT_PUBLIC_BASE_URL=${{ vars.NEXT_PUBLIC_BASE_URL }}
                  NEXT_PUBLIC_CAS_URL=${{ vars.NEXT_PUBLIC_CAS_URL }}
                  NEXT_CAS_CLIENT_SAML_TOLERANCE=${{ vars.NEXT_CAS_CLIENT_SAML_TOLERANCE }}
                  NEXT_CAS_CLIENT_SECRET=${{ secrets.NEXT_CAS_CLIENT_SECRET }}
                  EOF
            - name: Copy env to accessibility-front
              run: |
                  cp .env accessibility-front/.env

            - name: build and deploy
              run: |
                  docker compose -f docker-compose.yml build
                  docker compose -f docker-compose.yml up -d --remove-orphans

            - name: Remove docker artifacts
              run: |
                  docker system prune -f

            - name: Notify deployment success
              run: echo "Deployment to production server successful!"
