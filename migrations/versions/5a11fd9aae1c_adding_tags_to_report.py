"""adding tags to report

Revision ID: 5a11fd9aae1c
Revises: 7cf99568c789
Create Date: 2025-09-27 14:44:08.652754

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '5a11fd9aae1c'
down_revision = '7cf99568c789'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col['name'] for col in inspector.get_columns('report')]
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('report', schema=None) as batch_op:
        if 'tags' not in columns:
            batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
            # Fetch default_tags from settings table
            result = conn.execute(sa.text("SELECT value FROM settings WHERE key = 'default_tags'")).fetchone()
            default_tags = result[0] if result else '[]'
            # Convert comma-separated string to JSON array format
            default_tags = [tag.strip() for tag in default_tags.split(',') if tag.strip()]
            # Convert to JSON string
            import json
            default_tags = json.dumps(default_tags)
    if 'tags' not in columns:
        # Backfill tags column with default_tags for existing rows
        op.execute(
            sa.text("UPDATE report SET tags = :default_tags WHERE tags IS NULL")
            .bindparams(default_tags=default_tags)
        )
        
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.drop_column('tags')

    # ### end Alembic commands ###
